@using BloodBank.Shared.Entidades
@inject IRepository repository

@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label>Observacion:</label>
        <div>
            <InputText @bind-Value="Donacion.Observacion" />
            <ValidationMessage For="@(()=>Donacion.Observacion)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Inventario:</label>
        <div>
            <InputSelect @bind-Value="Donacion.InventarioId" class="form-control">
                <option value="">Selecciona un inventario</option>
                @foreach (var inventario in Inventarios)
                {
                    <option value="@inventario.Id">@inventario.Tipo</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => Donacion.InventarioId)" />
        </div>
    </div>

    <div class="mb-3">
        <label>Cita:</label>
        <div>
            <InputSelect @bind-Value="Donacion.CitaId" class="form-control">
                <option value="">Selecciona una cita</option>
                @foreach (var cita in Citas)
                {
                    <option value="@cita.Id">@cita.Fecha</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => Donacion.CitaId)" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-success" type="button" @onclick="ReturnAction">Regresar</button>


</EditForm>


@code {

    //NOTA: SE CAMBIO EL BOTON DE REGRESAR

    private EditContext editContext = null;

    protected override void OnInitialized()

    {
        editContext = new(Donacion);

    }

    private List<Inventario> Inventarios { get; set; } = new List<Inventario>();
    private List<Cita> Citas { get; set; } = new List<Cita>();


    protected override async Task OnInitializedAsync()
    {
        var response = await repository.GetInventariosAsync();
        if (!response.Error && response.Response != null)
        {
            Inventarios = response.Response;
        }
        var responseCita = await repository.GetCitasAsync();
        if (!responseCita.Error && responseCita.Response != null)
        {
            Citas = responseCita.Response;
        }

    }

    [EditorRequired]

    [Parameter]

    public Donacion Donacion { get; set; }





    [EditorRequired]

    [Parameter]

    public EventCallback OnSubmit { get; set; }



    [EditorRequired]

    [Parameter]



    public EventCallback ReturnAction { get; set; }





    public bool FormPostedSuccessfully { get; set; } = true; // ESTO SE MODIFICO A TRUE





    private async Task OnBeforeInternalNavigation(LocationChangingContext context)

    {

        var formWasEdited = editContext.IsModified();



        if (!formWasEdited || FormPostedSuccessfully) //SE AGREGO ESTA LOGICA

        {

            return;

        }



        //EL PROBLEMA RADICA EN QUE NUNCA ENTRA AQUI Y EN LA WEB NO MUESTRA ESTE MENSAJE



        var result = await swal.FireAsync(new SweetAlertOptions

            {

                Title = "Confirmación",

                Text = "¿Deseas abandonar la página y perder los cambios?",

                Icon = SweetAlertIcon.Warning,

                ShowCancelButton = true

            });



        var confirm = !string.IsNullOrEmpty(result.Value);



        if (confirm)

        {

            return;

        }



        context.PreventNavigation();

    }

}

