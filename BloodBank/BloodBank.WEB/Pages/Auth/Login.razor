@page "/Login"
@using BloodBank.Shared.DTOs;
@using BloodBank.WEB.Pages.Auth;
@using BloodBank.WEB.Services

@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService

<div class="d-flex justify-content-center align-items-center min-vh-60 mt-4">
    <div class="card shadow p-4 w-50" style="width:80px;">
        <!-- Ajustar el ancho aquí -->
        <h3 class="text-center">Iniciar Sesión</h3>
        <div class="text-center mb-4">
            <img src="/images/descarga.png" alt="Usuario" style="width: 80px; height: 80px;" />
        </div>
        <EditForm Model="loginDTO" OnValidSubmit="LoginAsync">
            <DataAnnotationsValidator />
            <div class="mb-3 text-center">
                <label for="email" class="form-label">Email:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="email" class="form-control text-center" style="width: 40%;" @bind-Value="@loginDTO.Email" />
                </div>
                <ValidationMessage For="@(() => loginDTO.Email)" />
            </div>
            <div class="mb-3 text-center">
                <label for="password" class="form-label">Contraseña:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="password" type="password" class="form-control text-center" style="width: 40%;" @bind-Value="@loginDTO.Password" />
                </div>
                <ValidationMessage For="@(() => loginDTO.Password)" />
            </div>
            <div class="text-center">
                <button class="btn" style="width: 20%; background-color: #f8d7da; border-color: #f5c6cb; color: #721c24;" type="submit">Iniciar Sesión</button>
            </div>
            <div class="text-center">
                <a class="bbtn btn-link" href="/ResendToken">Reenviar correro de activación de cuenta</a>
                <p><a class="bbtn btn-link" href="/RecoverPassword">¿Has olvidado tu contraseña?</a></p>
            </div>
        </EditForm>
    </div>
</div>





@code {
    private LoginDTO loginDTO = new();

    private async Task LoginAsync()
    {
        var responseHttp = await repository.PostAsync<LoginDTO, TokenDTO>("/api/accounts/Login", loginDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await loginService.LoginAsync(responseHttp.Response!.Token);
        navigationManager.NavigateTo("/");
    }
}

