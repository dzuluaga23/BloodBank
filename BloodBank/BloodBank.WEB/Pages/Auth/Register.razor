@using BloodBank.WEB.Shared
@page "/Register"
@using BloodBank.Shared.DTOs;
@using BloodBank.Shared.Enums;
@using BloodBank.WEB.AuthenticationProviders;
@using BloodBank.WEB.Pages.Auth
@using BloodBank.WEB.Services
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager
@inject ILoginService loginService

<div class="d-flex justify-content-center align-items-center min-vh-60 mt-4">
    <div class="card shadow p-4 w-50">
        <h3 class="text-center">Registrar Nuevo Usuario</h3>
        <div class="text-center mb-4">
            <img src="/images/descarga.png" alt="Usuario" style="width: 80px; height: 80px;" />
        </div>
        <EditForm Model="userDTO" OnValidSubmit="CreateUserAsync">
            <DataAnnotationsValidator />

            <div class="mb-3 text-center">
                <label for="document" class="form-label">Documento:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="document" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.Document" />
                </div>
                <ValidationMessage For="@(() => userDTO.Document)" />
            </div>

            <div class="mb-3 text-center">
                <label for="firstName" class="form-label">Nombres:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="firstName" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.FirstName" />
                </div>
                <ValidationMessage For="@(() => userDTO.FirstName)" />
            </div>

            <div class="mb-3 text-center">
                <label for="lastName" class="form-label">Apellidos:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="lastName" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.LastName" />
                </div>
                <ValidationMessage For="@(() => userDTO.LastName)" />
            </div>

            <div class="mb-3 text-center">
                <label for="phoneNumber" class="form-label">Teléfono:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="phoneNumber" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.PhoneNumber" />
                </div>
                <ValidationMessage For="@(() => userDTO.PhoneNumber)" />
            </div>

            <div class="mb-3 text-center">
                <label for="email" class="form-label">Email:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="email" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.Email" />
                </div>
                <ValidationMessage For="@(() => userDTO.Email)" />
            </div>

            <div class="mb-3 text-center">
                <label for="photo" class="form-label">Foto:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="photo" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.Photo" />
                </div>
                <ValidationMessage For="@(() => userDTO.Photo)" />
            </div>

            <div class="mb-3 text-center">
                <label for="password" class="form-label">Contraseña:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="password" type="password" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.Password" />
                </div>
                <ValidationMessage For="@(() => userDTO.Password)" />
            </div>

            <div class="mb-3 text-center">
                <label for="passwordConfirm" class="form-label">Confirmación de contraseña:</label>
                <div class="d-flex justify-content-center">
                    <InputText id="passwordConfirm" type="password" class="form-control text-center" style="width: 40%;" @bind-Value="userDTO.PasswordConfirm" />
                </div>
                <ValidationMessage For="@(() => userDTO.PasswordConfirm)" />
            </div>

            <div class="mb-3">
                <InputImg Label="Foto" ImageSelected="ImageSelected" ImageURL="@imageUrl" />
            </div>


            <div class="text-center">
                <button class="btn" style="width: 20%; background-color: #f8d7da; border-color: #f5c6cb; color: #721c24;" type="submit">Registrar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    private UserDTO userDTO = new();
    private string? imageUrl;
    private bool loading;


  
    private async Task CreateUserAsync()
    {

        imageUrl = userDTO.Photo;
        userDTO.Photo = null;
        userDTO.UserName = userDTO.Email;
        userDTO.UserType = UserType.User;

        var responseHttp = await repository.PostAsync<UserDTO>("/api/accounts/CreateUser", userDTO);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await sweetAlertService.FireAsync("Confirmación", "Su cuenta ha sido creada con éxito. Se te ha enviado un correo electrónico con las instrucciones para activar tu usuario.", SweetAlertIcon.Info);
        navigationManager.NavigateTo("/");
    }

    private void ImageSelected(string imagenBase64)
    {
        userDTO.Photo = imagenBase64;
        imageUrl = null;
    }


}
