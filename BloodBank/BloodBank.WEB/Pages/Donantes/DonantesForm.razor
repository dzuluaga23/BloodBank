@using BloodBank.Shared.Entidades

@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

<EditForm EditContext="editContext" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <!-- Contenedor que centra el formulario -->
    <div class="container d-flex justify-content-center align-items-center min-vh-75">
        <div class="w-50">
            <!-- Formulario -->
            <div class="mb-3">
                <label>Documento:</label>
                <div>
                    <InputText @bind-Value="Donante.Documento" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Documento)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Nombre:</label>
                <div>
                    <InputText @bind-Value="Donante.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Nombre)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Apellido:</label>
                <div>
                    <InputText @bind-Value="Donante.Apellido" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Apellido)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Correo:</label>
                <div>
                    <InputText @bind-Value="Donante.Correo" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Correo)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Tipo de Sangre:</label>
                <div>
                    <InputSelect @bind-Value="Donante.Sangre" class="form-control">
                        <option value="">Selecciona tu tipo de sangre</option>
                        <option value="1">A+</option>
                        <option value="2">O+</option>
                        <option value="3">B+</option>
                        <option value="4">AB+</option>
                        <option value="5">A-</option>
                        <option value="6">O-</option>
                        <option value="7">B-</option>
                        <option value="8">AB-</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => Donante.Sangre)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Fecha de Nacimiento:</label>
                <div>
                    <InputDate @bind-Value="Donante.Fecha" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Fecha)" />
                </div>
            </div>

            <div class="mb-3">
                <label>Telefono:</label>
                <div>
                    <InputText @bind-Value="Donante.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => Donante.Telefono)" />
                </div>
            </div>

            <!-- Botones centrados -->
            <div class="mb-3 d-flex justify-content-center gap-3">
                <button class="btn btn-primary" type="submit">Guardar</button>
                <button class="btn btn-success" type="button" @onclick="ReturnAction">Regresar</button>
            </div>
        </div>
    </div>
</EditForm>



@code {

    //NOTA: SE CAMBIO EL BOTON DE REGRESAR

    private EditContext editContext = null;

    protected override void OnInitialized()

    {
        if (Donante.Fecha == default)
        {
            Donante.Fecha = DateTime.Today; 
        }
        
        editContext = new(Donante);

    }





    [EditorRequired]

    [Parameter]

    public Donante Donante { get; set; }





    [EditorRequired]

    [Parameter]

    public EventCallback OnSubmit { get; set; }



    [EditorRequired]

    [Parameter]



    public EventCallback ReturnAction { get; set; }





    public bool FormPostedSuccessfully { get; set; } = true; // ESTO SE MODIFICO A TRUE





    private async Task OnBeforeInternalNavigation(LocationChangingContext context)

    {

        var formWasEdited = editContext.IsModified();



        if (!formWasEdited || FormPostedSuccessfully) //SE AGREGO ESTA LOGICA

        {

            return;

        }



        //EL PROBLEMA RADICA EN QUE NUNCA ENTRA AQUI Y EN LA WEB NO MUESTRA ESTE MENSAJE



        var result = await swal.FireAsync(new SweetAlertOptions

            {

                Title = "Confirmación",

                Text = "¿Deseas abandonar la página y perder los cambios?",

                Icon = SweetAlertIcon.Warning,

                ShowCancelButton = true

            });



        var confirm = !string.IsNullOrEmpty(result.Value);



        if (confirm)

        {

            return;

        }



        context.PreventNavigation();

    }

}

