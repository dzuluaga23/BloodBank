
@page "/inventarios" 

  

  

@using CurrieTechnologies.Razor.SweetAlert2 

@using BloodBank.Shared.Entidades

@using BloodBank.WEB.Repositories 

@using BloodBank.WEB.Shared 

  

@inject IRepository repository 

@inject NavigationManager navigationManager 

@inject SweetAlertService swal 

  

<h3>INVENTARIO</h3> 

  

  

<div class ="mb-3"> 

  

<a class="btn btn-primary" href="/inventarios/Create">Crear Inventario</a> 

</div> 

  

  

<GenericList MyList="Inventarios">  

    <Body> 

        <table class="table table-striped">  

            <thead> 

                <tr> 

                    <th>Inventario</th> 

                </tr> 

  

            </thead> 

            <tbody> 

                    @foreach(var inventario in Inventarios) 

                    { 

                        <tr> 

                            <td> 

                                @inventario.Codigo

                            </td> 

  

                             <td> 

                                @inventario.Tipo

                            </td> 

  

                            <td> 

                                @inventario.Cantidad

                             </td> 


                            <td> 

                                 <a href="/inventarios/edit/@inventario.Id" class="btn btn-warning btn-sm"><i class="oi oi-pencil" /> Editar</a> 

                                 <button class="btn btn-danger btn-sm" @onclick=@(() => DeleteAsync(inventario))><i class="oi oi-trash" /> Borrar</button> 

  

  

                            </td> 

  

                        </tr> 

                    } 

                </tbody> 

  

  

  

        </table> 

  

    </Body> 

  

</GenericList> 

  

@code { 

  

    public List <Inventario> Inventarios { get; set; } 

  

    protected async override Task OnInitializedAsync() 

    { 

        await Load(); 

    } 

  

    private async Task Load() 

    { 

        var responseHppt = await repository.GetAsync<List<Inventario>>("/api/inventarios"); 

        Inventarios = responseHppt.Response!; 

    } 

  

    private async Task DeleteAsync(Inventario inventario) 

    { 

        var result = await swal.FireAsync(new SweetAlertOptions 

            { 

                Title = "Confirmación", 

                Text = "¿Esta seguro que quieres borrar el registro?", 

                Icon = SweetAlertIcon.Question, 

                ShowCancelButton = true 

            }); 

  

        var confirm = string.IsNullOrEmpty(result.Value); 

  

        if (confirm) 

        { 

            return; 

        } 

  

        var responseHTTP = await repository.DeleteAsync<Inventario>($"api/inventarios/{inventario.Id}"); 

  

        if (responseHTTP.Error) 

        { 

            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound) 

            { 

                navigationManager.NavigateTo("/"); 

            } 

            else 

            { 

                var mensajeError = await responseHTTP.GetErrorMessageAsync(); 

                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error); 

            } 

        } 

        else 

        { 

            await Load(); 

        } 

    } 

} 